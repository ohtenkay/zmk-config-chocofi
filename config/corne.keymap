/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <80>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < 23 24 25 26 27 29 30 31 32 33 35 36 37 38 39 40 41 42 >; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <80>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < 2 3 4 5 6 8 9 10 11 12 14 15 16 17 18 19 20 21 >; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
   &trans       &kp Q        &kp W        &kp E        &kp R        &kp T          &kp Y        &kp U        &kp I        &kp O        &kp P            &trans
   &trans       &hml LALT A  &hml LGUI S  &hml LCTRL D &hml LSHFT F &kp G          &kp H        &hmr RSHFT J &hmr RCTRL K &hmr RGUI L  &hmr RALT SEMI   &trans
   &trans       &kp Z        &kp X        &kp C        &kp V        &kp B          &kp N        &kp M        &kp COMMA    &kp DOT      &kp FSLH         &trans
                                          &kp ESC      &mo 1        &kp SPACE      &kp BSPC     &mo 2        &kp RET
            >;
        };

        lower_layer {
            bindings = <
   &trans       &kp GRAVE        &kp MINUS        &kp BSLH         &kp LBRC         &kp RBRC       &kp STAR     &kp N4           &kp N5           &kp N6       &kp DEL          &trans
   &trans       &hml LALT TAB    &hml LGUI EQUAL  &hml LCTRL SQT   &hml LSHFT LBKT  &kp RBKT       &kp N0       &hmr RSHFT N1    &hmr RCTRL N2    &hmr RGUI N3 &hmr RALT EXCL   &trans
   &trans       &kp CARET        &kp AT           &kp HASH         &kp DLLR         &kp PRCNT      &kp AMPS     &kp N7           &kp N8           &kp N9       &kp INS          &trans
                                                  &trans           &trans           &trans         &kp BSPC     &trans           &kp RET
            >;
        };

        raise_layer {
            bindings = <
   &kp  TAB     &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT      &kp CARET    &kp AMPS     &kp ASTRK    &kp LPAR     &kp RPAR     &kp BSPC
   &kp LCTRL    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp MINUS    &kp EQUAL    &kp LBKT     &kp RBKT     &kp BSLH     &kp GRAVE
   &kp LSHFT    &bt BT_CLR   &trans       &trans       &trans       &trans         &kp UNDER    &kp PLUS     &kp LBRC     &kp RBRC     &kp PIPE     &kp TILDE
                                          &kp LGUI     &trans       &kp SPACE      &kp RET      &trans       &kp RALT
            >;
        };
    };
};
